{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\blog-next-disqus\\\\frontend\\\\components\\\\Navbar\\\\Navbar.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport NProgress from 'nprogress';\nimport Search from '../blog/Search/Search';\nimport Router from 'next/router';\nimport Toolbar from './Toolbar/Toolbar';\nimport SideDrawer from './SideDrawer/SideDrawer';\nimport Backdrop from './Backdrop/Backdrop';\n\nRouter.onRouteChangeStart = function (url) {\n  return NProgress.start();\n};\n\nRouter.onRouteChangeComplete = function (url) {\n  return NProgress.done();\n};\n\nRouter.onRouteChangeError = function (url) {\n  return NProgress.done();\n};\n\nvar Navbar = function Navbar() {\n  _s();\n\n  var _useState = useState(false),\n      sideDrawer = _useState[0],\n      sideDrawerOpen = _useState[1];\n\n  var drawerToggleClickHandler = function drawerToggleClickHandler() {\n    sideDrawerOpen(function (sideDrawer) {\n      return !sideDrawer;\n    });\n  };\n\n  var backdropClickHandler = function backdropClickHandler() {\n    return sideDrawerOpen(false);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Toolbar, {\n    isOpen: sideDrawer,\n    drawerClickHandler: drawerToggleClickHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), __jsx(SideDrawer, {\n    show: sideDrawer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), sideDrawer && __jsx(Backdrop, {\n    click: backdropClickHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 22\n    }\n  }));\n};\n\n_s(Navbar, \"Cg1JLdJ1936223jDki9zDq82dKg=\");\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["C:/blog-next-disqus/frontend/components/Navbar/Navbar.jsx"],"names":["useState","NProgress","Search","Router","Toolbar","SideDrawer","Backdrop","onRouteChangeStart","url","start","onRouteChangeComplete","done","onRouteChangeError","Navbar","sideDrawer","sideDrawerOpen","drawerToggleClickHandler","backdropClickHandler"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;AAEAH,MAAM,CAACI,kBAAP,GAA4B,UAACC,GAAD;AAAA,SAASP,SAAS,CAACQ,KAAV,EAAT;AAAA,CAA5B;;AACAN,MAAM,CAACO,qBAAP,GAA+B,UAACF,GAAD;AAAA,SAASP,SAAS,CAACU,IAAV,EAAT;AAAA,CAA/B;;AACAR,MAAM,CAACS,kBAAP,GAA4B,UAACJ,GAAD;AAAA,SAASP,SAAS,CAACU,IAAV,EAAT;AAAA,CAA5B;;AAEA,IAAME,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA;;AAAA,kBACkBb,QAAQ,CAAC,KAAD,CAD1B;AAAA,MACZc,UADY;AAAA,MACAC,cADA;;AAGnB,MAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,GAAM;AACrCD,IAAAA,cAAc,CAAC,UAACD,UAAD;AAAA,aAAgB,CAACA,UAAjB;AAAA,KAAD,CAAd;AACD,GAFD;;AAGA,MAAMG,oBAAoB,GAAG,SAAvBA,oBAAuB;AAAA,WAAMF,cAAc,CAAC,KAAD,CAApB;AAAA,GAA7B;;AAEA,SACE,4BACE,MAAC,OAAD;AACE,IAAA,MAAM,EAAED,UADV;AAEE,IAAA,kBAAkB,EAAEE,wBAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE,MAAC,UAAD;AAAY,IAAA,IAAI,EAAEF,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAMGA,UAAU,IAAI,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEG,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANjB,CADF;AAUD,CAlBD;;GAAMJ,M;;KAAAA,M;AAoBN,eAAeA,MAAf","sourcesContent":["import { useState } from 'react';\nimport NProgress from 'nprogress';\nimport Search from '../blog/Search/Search';\nimport Router from 'next/router';\n\nimport Toolbar from './Toolbar/Toolbar';\nimport SideDrawer from './SideDrawer/SideDrawer';\nimport Backdrop from './Backdrop/Backdrop';\n\nRouter.onRouteChangeStart = (url) => NProgress.start();\nRouter.onRouteChangeComplete = (url) => NProgress.done();\nRouter.onRouteChangeError = (url) => NProgress.done();\n\nconst Navbar = () => {\n  const [sideDrawer, sideDrawerOpen] = useState(false);\n\n  const drawerToggleClickHandler = () => {\n    sideDrawerOpen((sideDrawer) => !sideDrawer);\n  };\n  const backdropClickHandler = () => sideDrawerOpen(false);\n\n  return (\n    <>\n      <Toolbar\n        isOpen={sideDrawer}\n        drawerClickHandler={drawerToggleClickHandler}\n      />\n      <SideDrawer show={sideDrawer} />\n      {sideDrawer && <Backdrop click={backdropClickHandler} />}\n    </>\n  );\n};\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}