{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\blog-next-disqus\\\\frontend\\\\components\\\\blog\\\\Search\\\\Search.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport { blogSearch } from '../../../actions/blog';\nimport './Search.scss';\n\nvar Search = function Search() {\n  _s();\n\n  var _useState = useState({\n    search: '',\n    results: [],\n    searched: false,\n    message: '',\n    error: null\n  }),\n      values = _useState[0],\n      setValues = _useState[1]; // *** IMPLEMENTNG SEARCH ****\n  // 1# send data to backend to fetch results\n  // 2# once the results are fetched, add them to state\n  // 3# render results based on data stored in state\n\n\n  var search = values.search,\n      results = values.results,\n      message = values.message,\n      searched = values.searched,\n      error = values.error;\n  useEffect(function () {\n    fetchData();\n  }, []);\n\n  var fetchData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return blogSearch({\n                search: search\n              });\n\n            case 3:\n              response = _context.sent;\n              setValues(_objectSpread(_objectSpread({}, values), {}, {\n                results: response,\n                searched: true\n              }));\n\n              if (response.length === 0) {\n                setValues(_objectSpread(_objectSpread({}, values), {}, {\n                  message: 'No blogs found'\n                }));\n              }\n\n              _context.next = 12;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n              setValues(_objectSpread(_objectSpread({}, values), {}, {\n                error: _context.t0\n              }));\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n\n    return function fetchData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleChange = function handleChange(e) {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      search: e.target.value,\n      searched: false,\n      results: [],\n      message: ''\n    }));\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    fetchData();\n  };\n\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"search\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, __jsx(\"input\", {\n    type: \"search\",\n    className: \"search__input-bar\",\n    placeholder: \"Search...\",\n    onChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), results && __jsx(\"ul\", {\n    className: \"search__list-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, results.map(function (blog) {\n    return __jsx(Link, {\n      href: \"/blogs/\".concat(blog.slug),\n      key: blog._id,\n      className: \"search__link\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, __jsx(\"a\", {\n      className: \"search__link\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, __jsx(\"li\", {\n      className: \"search__list-group-item\",\n      key: blog._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, blog.title)));\n  }), message ? __jsx(\"li\", {\n    className: \"search__list-group-item search__list-group-item__message\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, message) : null));\n};\n\n_s(Search, \"t2AssrhkmIPcSXmYd7X+feXRWjo=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/blog-next-disqus/frontend/components/blog/Search/Search.jsx"],"names":["Link","useState","useEffect","blogSearch","Search","search","results","searched","message","error","values","setValues","fetchData","response","length","console","log","handleChange","e","target","value","handleSubmit","preventDefault","map","blog","slug","_id","title"],"mappings":"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","sourcesContent":["import Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport { blogSearch } from '../../../actions/blog';\nimport './Search.scss';\n\nconst Search = () => {\n  const [values, setValues] = useState({\n    search: '',\n    results: [],\n    searched: false,\n    message: '',\n    error: null,\n  });\n\n  // *** IMPLEMENTNG SEARCH ****\n  // 1# send data to backend to fetch results\n  // 2# once the results are fetched, add them to state\n  // 3# render results based on data stored in state\n\n  const { search, results, message, searched, error } = values;\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async function () {\n    try {\n      const response = await blogSearch({ search });\n\n      setValues({\n        ...values,\n        results: response,\n        searched: true,\n      });\n\n      if (response.length === 0) {\n        setValues({\n          ...values,\n          message: 'No blogs found',\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      setValues({\n        ...values,\n        error: error,\n      });\n    }\n  };\n\n  const handleChange = (e) => {\n    setValues({\n      ...values,\n      search: e.target.value,\n      searched: false,\n      results: [],\n      message: '',\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    fetchData();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className='search'>\n      <input\n        type='search'\n        className='search__input-bar'\n        placeholder='Search...'\n        onChange={handleChange}\n      />\n      {results && (\n        <ul className='search__list-group'>\n          {results.map((blog) => (\n            <Link\n              href={`/blogs/${blog.slug}`}\n              key={blog._id}\n              className='search__link'\n            >\n              <a className='search__link'>\n                <li className='search__list-group-item' key={blog._id}>\n                  {blog.title}\n                </li>\n              </a>\n            </Link>\n          ))}\n          {message ? (\n            <li className='search__list-group-item search__list-group-item__message'>\n              {message}\n            </li>\n          ) : null}\n        </ul>\n      )}\n    </form>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}