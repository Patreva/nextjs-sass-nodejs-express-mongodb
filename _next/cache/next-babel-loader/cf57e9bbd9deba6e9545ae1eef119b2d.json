{"ast":null,"code":"var _jsxFileName = \"C:\\\\blog-next-disqus\\\\frontend\\\\components\\\\blog\\\\Search\\\\Search.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport { blogSearch } from '../../../actions/blog';\nimport './Search.scss';\n\nconst Search = () => {\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    search: '',\n    results: [],\n    searched: false,\n    message: '',\n    error: null\n  }); // *** IMPLEMENTNG SEARCH ****\n  // 1# send data to backend to fetch results\n  // 2# once the results are fetched, add them to state\n  // 3# render results based on data stored in state\n\n  const {\n    search,\n    results,\n    message,\n    searched,\n    error\n  } = values;\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async function () {\n    try {\n      const response = await blogSearch({\n        search\n      });\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        results: response,\n        searched: true\n      }));\n\n      if (response.length === 0) {\n        setValues(_objectSpread(_objectSpread({}, values), {}, {\n          message: 'No blogs found'\n        }));\n      }\n    } catch (error) {\n      console.log(error);\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        error: error\n      }));\n    }\n  };\n\n  const handleChange = e => {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      search: e.target.value,\n      searched: false,\n      results: [],\n      message: ''\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetchData();\n  };\n\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, __jsx(\"input\", {\n    type: \"search\",\n    className: \"search__input-bar\",\n    placeholder: \"Search...\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), results && __jsx(\"ul\", {\n    className: \"search__list-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, results.map(blog => __jsx(Link, {\n    href: `/blogs/${blog.slug}`,\n    key: blog._id,\n    className: \"search__link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    className: \"search__link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, __jsx(\"li\", {\n    className: \"search__list-group-item\",\n    key: blog._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, blog.title)))), message ? __jsx(\"li\", {\n    className: \"search__list-group-item search__list-group-item__message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, message) : null));\n};\n\nexport default Search;","map":{"version":3,"sources":["C:/blog-next-disqus/frontend/components/blog/Search/Search.jsx"],"names":["Link","useState","useEffect","blogSearch","Search","values","setValues","search","results","searched","message","error","fetchData","response","length","console","log","handleChange","e","target","value","handleSubmit","preventDefault","map","blog","slug","_id","title"],"mappings":"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","sourcesContent":["import Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport { blogSearch } from '../../../actions/blog';\nimport './Search.scss';\n\nconst Search = () => {\n  const [values, setValues] = useState({\n    search: '',\n    results: [],\n    searched: false,\n    message: '',\n    error: null,\n  });\n\n  // *** IMPLEMENTNG SEARCH ****\n  // 1# send data to backend to fetch results\n  // 2# once the results are fetched, add them to state\n  // 3# render results based on data stored in state\n\n  const { search, results, message, searched, error } = values;\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async function () {\n    try {\n      const response = await blogSearch({ search });\n\n      setValues({\n        ...values,\n        results: response,\n        searched: true,\n      });\n\n      if (response.length === 0) {\n        setValues({\n          ...values,\n          message: 'No blogs found',\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      setValues({\n        ...values,\n        error: error,\n      });\n    }\n  };\n\n  const handleChange = (e) => {\n    setValues({\n      ...values,\n      search: e.target.value,\n      searched: false,\n      results: [],\n      message: '',\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    fetchData();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className='search'>\n      <input\n        type='search'\n        className='search__input-bar'\n        placeholder='Search...'\n        onChange={handleChange}\n      />\n      {results && (\n        <ul className='search__list-group'>\n          {results.map((blog) => (\n            <Link\n              href={`/blogs/${blog.slug}`}\n              key={blog._id}\n              className='search__link'\n            >\n              <a className='search__link'>\n                <li className='search__list-group-item' key={blog._id}>\n                  {blog.title}\n                </li>\n              </a>\n            </Link>\n          ))}\n          {message ? (\n            <li className='search__list-group-item search__list-group-item__message'>\n              {message}\n            </li>\n          ) : null}\n        </ul>\n      )}\n    </form>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}